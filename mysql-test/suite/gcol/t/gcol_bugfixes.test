################################################################################
# t/gcol_bugfixes.test                                                         #
#                                                                              #
# Purpose:                                                                     #
#  Bug fixes that only need one storage engine                                 #
#                                                                              #
################################################################################

--echo # Bug#21230709: Alter table statement fails with division by zero

CREATE TABLE t1 (
  col1 INTEGER NOT NULL,
  col2 INTEGER NOT NULL,
  col3 INTEGER NOT NULL,
  gcol1 INTEGER GENERATED ALWAYS AS (col3 + col3) VIRTUAL,
  col4 INTEGER DEFAULT NULL,
  col5 INTEGER DEFAULT NULL,
  col6 INTEGER DEFAULT NULL,
  col7 INTEGER DEFAULT NULL,
  col8 INTEGER DEFAULT NULL,
  col9 INTEGER DEFAULT NULL,
  col10 INTEGER DEFAULT NULL,
  col11 INTEGER DEFAULT NULL,
  col12 INTEGER DEFAULT NULL,
  col13 INTEGER DEFAULT NULL,
  col14 INTEGER DEFAULT NULL,
  col15 INTEGER DEFAULT NULL,
  col16 INTEGER DEFAULT NULL,
  col17 INTEGER DEFAULT NULL,
  col18 INTEGER DEFAULT NULL,
  col19 INTEGER DEFAULT NULL,
  col20 INTEGER DEFAULT NULL,
  col21 INTEGER DEFAULT NULL,
  col22 INTEGER DEFAULT NULL,
  col23 INTEGER DEFAULT NULL,
  col24 INTEGER DEFAULT NULL,
  col25 INTEGER DEFAULT NULL,
  col26 INTEGER DEFAULT NULL,
  col27 INTEGER DEFAULT NULL,
  col28 INTEGER DEFAULT NULL,
  col29 INTEGER DEFAULT NULL,
  col30 INTEGER DEFAULT NULL,
  col31 INTEGER DEFAULT NULL,
  col32 INTEGER DEFAULT NULL,
  col33 INTEGER DEFAULT NULL,
  gcol2 INTEGER GENERATED ALWAYS AS (col2 + col2) VIRTUAL,
  gcol3 INTEGER GENERATED ALWAYS AS (gcol2 / gcol2) VIRTUAL,
  PRIMARY KEY (col1),
  KEY idx1 (gcol1)
) engine=innodb;

INSERT INTO t1 (col1, col2, col3)
  VALUES (0,1,2), (1,2,3), (2,3,4), (3,4,5), (4,5,6);

# This is likely needed to ensure we allocate a new record buffer that
# contains zero in the mis-used field
FLUSH TABLE t1;

ALTER TABLE t1 ADD COLUMN extra INTEGER;

DROP TABLE t1;

--echo #
--echo # Bug 21340801 WL8149:ASSERTION `IS_VIRTUAL_GCOL()' FAILED
--echo #

CREATE TABLE t1 (
  c_blob BLOB,
  c_blob_key BLOB GENERATED ALWAYS AS (REPEAT(c_blob,15)) STORED,
  KEY (c_blob_key(200))
); 

INSERT  INTO t1 (c_blob) VALUES ('xceks');

DROP TABLE t1;

--echo #
--echo # Bug#21345972 WL8149:JOIN_CACHE::FILTER_VIRTUAL_GCOL_BASE_COLS(): ASSERTION `FALSE' FAILED.
--echo #

CREATE TABLE c (
                        pk INTEGER AUTO_INCREMENT,
                        col_int_nokey INTEGER /*! NULL */,
                        col_int_key INTEGER GENERATED ALWAYS AS
(col_int_nokey + col_int_nokey) VIRTUAL not null,

                        col_date_nokey DATE /*! NULL */,
                        col_date_key DATE GENERATED ALWAYS AS
(DATE_ADD(col_date_nokey,interval 30 day)) VIRTUAL not null,

                        col_datetime_nokey DATETIME /*! NULL */,
                        col_time_nokey TIME /*! NULL */,

                        col_datetime_key DATETIME GENERATED ALWAYS AS
(ADDTIME(col_datetime_nokey, col_time_nokey)) VIRTUAL not null,
                        col_time_key TIME GENERATED ALWAYS AS
(ADDTIME(col_datetime_nokey, col_time_nokey)) VIRTUAL not null,

                        col_varchar_nokey VARCHAR(1) /*! NULL */,
                        col_varchar_key VARCHAR(2) GENERATED ALWAYS AS
(CONCAT(col_varchar_nokey, col_varchar_nokey)) VIRTUAL not null,

                        PRIMARY KEY (pk),
                        UNIQUE KEY (col_int_key),
                        UNIQUE KEY (col_varchar_key),
                        UNIQUE KEY (col_date_key),
                        KEY (col_time_key),
                        KEY (col_datetime_key),
                        UNIQUE KEY (col_int_key, col_varchar_key),
                        KEY (col_int_key, col_int_nokey),
                        KEY(col_int_key,col_date_key),
                        KEY(col_int_key, col_time_key),
                        KEY(col_int_key, col_datetime_key),
                        UNIQUE
KEY(col_date_key,col_time_key,col_datetime_key),
                        UNIQUE KEY (col_varchar_key, col_varchar_nokey),
                        UNIQUE KEY (col_int_key, col_varchar_key,
col_date_key, col_time_key, col_datetime_key)
                )  ENGINE=INNODB;

INSERT /*! IGNORE */ INTO c (
                                col_int_nokey,
                                col_date_nokey,
                                col_time_nokey,
                                col_datetime_nokey,
                                col_varchar_nokey
                        ) VALUES (7, '2004-04-09', '14:03:03.042673',
'2001-11-28 00:50:27.051028', 'c'),(1, '2006-05-13', '01:46:09.016386',
'2007-10-09 19:53:04.008332', NULL);

CREATE TABLE bb (
                        pk INTEGER AUTO_INCREMENT,
                        col_int_nokey INTEGER /*! NULL */,
                        col_int_key INTEGER GENERATED ALWAYS AS
(col_int_nokey + col_int_nokey) VIRTUAL not null,

                        col_date_nokey DATE /*! NULL */,
                        col_date_key DATE GENERATED ALWAYS AS
(DATE_ADD(col_date_nokey,interval 30 day)) VIRTUAL not null,

                        col_datetime_nokey DATETIME /*! NULL */,
                        col_time_nokey TIME /*! NULL */,

                        col_datetime_key DATETIME GENERATED ALWAYS AS
(ADDTIME(col_datetime_nokey, col_time_nokey)) VIRTUAL not null,
                        col_time_key TIME GENERATED ALWAYS AS
(ADDTIME(col_datetime_nokey, col_time_nokey)) VIRTUAL not null,

                        col_varchar_nokey VARCHAR(1) /*! NULL */,
                        col_varchar_key VARCHAR(2) GENERATED ALWAYS AS
(CONCAT(col_varchar_nokey, col_varchar_nokey)) VIRTUAL not null,

                        PRIMARY KEY (pk),
                        UNIQUE KEY (col_int_key),
                        UNIQUE KEY (col_varchar_key),
                        UNIQUE KEY (col_date_key),
                        KEY (col_time_key),
                        KEY (col_datetime_key),
                        UNIQUE KEY (col_int_key, col_varchar_key),
                        KEY (col_int_key, col_int_nokey),
                        KEY(col_int_key,col_date_key),
                        KEY(col_int_key, col_time_key),
                        KEY(col_int_key, col_datetime_key),
                        UNIQUE
KEY(col_date_key,col_time_key,col_datetime_key),
                        UNIQUE KEY (col_varchar_key, col_varchar_nokey),
                        UNIQUE KEY (col_int_key, col_varchar_key,
col_date_key, col_time_key, col_datetime_key)
                )  AUTO_INCREMENT=10 ENGINE=INNODB;

INSERT /*! IGNORE */ INTO bb (
                                col_int_nokey,
                                col_date_nokey,
                                col_time_nokey,
                                col_datetime_nokey,
                                col_varchar_nokey
                        ) VALUES (0, '2003-08-04', '01:48:05.048577',
'2006-11-03 00:00:00', 'p'),(2, '2007-11-06', '00:00:00', '2009-11-26 19:28:11.005115', 'n');

CREATE TABLE cc (
                        pk INTEGER AUTO_INCREMENT,
                        col_int_nokey INTEGER /*! NULL */,
                        col_int_key INTEGER GENERATED ALWAYS AS
(col_int_nokey + col_int_nokey) VIRTUAL not null,

                        col_date_nokey DATE /*! NULL */,
                        col_date_key DATE GENERATED ALWAYS AS
(DATE_ADD(col_date_nokey,interval 30 day)) VIRTUAL not null,

                        col_datetime_nokey DATETIME /*! NULL */,
                        col_time_nokey TIME /*! NULL */,

                        col_datetime_key DATETIME GENERATED ALWAYS AS
(ADDTIME(col_datetime_nokey, col_time_nokey)) VIRTUAL not null,
                        col_time_key TIME GENERATED ALWAYS AS
(ADDTIME(col_datetime_nokey, col_time_nokey)) VIRTUAL not null,

                        col_varchar_nokey VARCHAR(1) /*! NULL */,
                        col_varchar_key VARCHAR(2) GENERATED ALWAYS AS
(CONCAT(col_varchar_nokey, col_varchar_nokey)) VIRTUAL not null,

                        PRIMARY KEY (pk),
                        UNIQUE KEY (col_int_key),
                        UNIQUE KEY (col_varchar_key),
                        UNIQUE KEY (col_date_key),
                        KEY (col_time_key),
                        KEY (col_datetime_key),
                        UNIQUE KEY (col_int_key, col_varchar_key),
                        KEY (col_int_key, col_int_nokey),
                        KEY(col_int_key,col_date_key),
                        KEY(col_int_key, col_time_key),
                        KEY(col_int_key, col_datetime_key),
                        UNIQUE
KEY(col_date_key,col_time_key,col_datetime_key),
                        UNIQUE KEY (col_varchar_key, col_varchar_nokey),
                        UNIQUE KEY (col_int_key, col_varchar_key,
col_date_key, col_time_key, col_datetime_key)
                )  AUTO_INCREMENT=10 ENGINE=INNODB;

INSERT /*! IGNORE */ INTO cc (
                                col_int_nokey,
                                col_date_nokey,
                                col_time_nokey,
                                col_datetime_nokey,
                                col_varchar_nokey
                        ) VALUES (172, '2009-04-23', '00:00:00', '2000-12-07 10:17:40.013275', 'h'),(NULL, '2002-10-06', '00:50:49.017545', NULL, 'm');

let $query=
SELECT
gp1 . col_datetime_key AS g1
FROM cc AS gp1 LEFT JOIN c AS gp2 ON ( gp2 . col_datetime_key <> gp1 .
col_time_nokey )
WHERE
gp1 . col_varchar_nokey IN
(
SELECT
DISTINCT p1 . col_varchar_key AS p1
FROM bb AS p1 LEFT JOIN bb AS p2
ON ( p1 . col_int_key = p2 . pk )
)
AND gp1 . col_varchar_nokey = 'b'
HAVING g1 > 6;

eval EXPLAIN $query;
eval $query;
DROP TABLE bb, c, cc;

--echo # Bug#21284646: Assertion !(table || table->read_set || bitmap_is_set())

CREATE TABLE c (
 pk INTEGER AUTO_INCREMENT,
 col_int_nokey INTEGER NOT NULL,
 col_int_key INTEGER GENERATED ALWAYS AS (col_int_nokey + col_int_nokey) VIRTUAL not null,
 col_date_nokey DATE NOT NULL,
 col_date_key DATE GENERATED ALWAYS AS (DATE_ADD(col_date_nokey,interval 30 day)) VIRTUAL not null,
 col_datetime_nokey DATETIME NOT NULL,
 col_time_nokey TIME NOT NULL,
 col_datetime_key DATETIME GENERATED ALWAYS AS (ADDTIME(col_datetime_nokey, col_time_nokey)) VIRTUAL not null,
 col_time_key TIME GENERATED ALWAYS AS (ADDTIME(col_datetime_nokey, col_time_nokey)) VIRTUAL not null,
 col_varchar_nokey VARCHAR(1) NOT NULL,
 col_varchar_key VARCHAR(2) GENERATED ALWAYS AS (CONCAT(col_varchar_nokey, col_varchar_nokey)) VIRTUAL not null,
 PRIMARY KEY (pk,col_int_nokey),
 UNIQUE KEY (col_int_key),
 UNIQUE KEY (col_varchar_key),
 UNIQUE KEY (col_date_key),
 KEY (col_time_key),
 KEY (col_datetime_key),
 UNIQUE KEY (col_int_key, col_varchar_key),
 KEY (col_int_key, col_int_nokey),
 KEY(col_int_key,col_date_key),
 KEY(col_int_key, col_time_key),
 KEY(col_int_key, col_datetime_key),
 UNIQUE KEY (col_date_key,col_time_key,col_datetime_key),
 UNIQUE KEY (col_varchar_key, col_varchar_nokey),
 UNIQUE KEY (col_int_key, col_varchar_key, col_date_key, col_time_key, col_datetime_key)
)  ENGINE=INNODB;

INSERT INTO c (col_int_nokey, col_date_nokey, col_time_nokey, col_datetime_nokey, col_varchar_nokey) VALUES
(1, '2009-12-01', '00:21:38.058143', '2007-05-28 00:00:00', 'c'),
(8, '2004-12-17', '04:08:02.046897', '2009-07-25 09:21:20.064099', 'm'),
(9, '2000-03-14', '16:25:11.040240', '2002-01-16 00:00:00', 'd'),
(6, '2006-05-25', '19:47:59.011283', '2001-02-15 03:08:38.035426', 'y'),
(2, '2002-10-13', '00:00:00', '1900-01-01 00:00:00', 's'),
(4, '1900-01-01', '15:57:25.019666', '2005-08-15 00:00:00', 'r');

ANALYZE TABLE c;
let $query=
SELECT COUNT(DISTINCT col_varchar_key) AS x
FROM c
WHERE col_varchar_key IN ('rr', 'rr') OR
      col_int_nokey <> 9 AND
      pk >= 8
HAVING x > '2000-02-06'
ORDER BY col_time_nokey, pk;

eval explain $query;
eval $query;

DROP TABLE c;

--echo # Bug#21341044: Conditional jump at sort_param::make_sort_key

CREATE TABLE t1 (
 pk INTEGER AUTO_INCREMENT,
 col_int_nokey INTEGER /*! NULL */,
 col_int_key INTEGER GENERATED ALWAYS AS (col_int_nokey + col_int_nokey) VIRTUAL,
 col_blob_nokey BLOB /*! NULL */,
 col_blob_key BLOB GENERATED ALWAYS AS (REPEAT(col_blob_nokey,15)) VIRTUAL,
 col_longblob_nokey LONGBLOB /*! NULL */,
 col_longtext_nokey LONGTEXT /*! NULL */,
 col_longblob_key LONGBLOB GENERATED ALWAYS AS (REPEAT(col_longblob_nokey, 20)) VIRTUAL,
 col_longtext_key LONGTEXT GENERATED ALWAYS AS (REPEAT(col_longblob_nokey, 18)) VIRTUAL,
 col_text_nokey TEXT /*! NULL */,
 col_text_key TEXT GENERATED ALWAYS AS (REPEAT(col_text_nokey, 30)) VIRTUAL,
 PRIMARY KEY (pk),
 KEY (col_int_key),
 KEY (col_text_key(50)),
 KEY (col_blob_key(200)),
 KEY (col_longtext_key(200)),
 KEY (col_longblob_key(200)),
 KEY (col_int_key, col_text_key(100)),
 KEY (col_int_key, col_longtext_key(100)),
 KEY (col_int_key, col_blob_key(100)),
 KEY (col_int_key, col_longblob_key(100)),
 KEY (col_longtext_key(10), col_longblob_key(100)),
 KEY (col_int_key, col_text_key(10), col_blob_key(100), col_longtext_key(50), col_longblob_key(50))
) engine=innodb;

INSERT INTO t1 (col_int_nokey,col_blob_nokey,col_longtext_nokey,col_longblob_nokey,col_text_nokey)
VALUES
(0, 'ijcszxw', 'ijcszxw', 'ijcszxw', 'ijcszxw'),
(5, 'jcszxwb', 'jcszxwb', 'jcszxwb', 'jcszxwb'),
(4, 'cszxwbjjvv', 'cszxwbjjvv', 'cszxwbjjvv', 'cszxwbjjvv'),
(3, 'szxw', 'szxw', 'szxw', 'szxw'),
(7, 'zxwb', 'zxwb', 'zxwb', 'zxwb'),
(42, 'xwbjjvvky', 'xwbjjvvky', 'xwbjjvvky', 'xwbjjvvky'),
(142, 'wbjj', 'wbjj', 'wbjj', 'wbjj'),
(5, 'bjjv', 'bjjv', 'bjjv', 'bjjv'),
(0, 'jjvvkymalu', 'jjvvkymalu', 'jjvvkymalu', 'jjvvkymalu'),
(3, 'j', 'j', 'j', 'j');

SELECT alias1.pk AS field1
FROM t1 AS alias1 LEFT OUTER JOIN t1 AS alias2
     ON alias1.col_int_key = alias2.col_int_key
WHERE alias2.col_int_key BETWEEN 8 AND (8 + 1 ) OR
      alias2.col_int_key  BETWEEN 8 AND (8 + 5 ) AND
      alias2.col_int_key != 20 OR
      alias2.col_int_key IN (8, 5, 8) AND
      alias2.col_int_key >= 0 AND
      alias2.col_int_key <= ( 8 + 75 ) AND
      alias1.pk IS NOT NULL
ORDER BY field1;

DROP TABLE t1;
